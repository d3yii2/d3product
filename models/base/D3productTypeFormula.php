<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3product\models\base;

use Yii;


/**
 * This is the base-model class for table "d3product_type_formula".
 *
 * @property integer $id
 * @property integer $product_type_id
 * @property integer $unit_formula_id
 *
 * @property \d3yii2\d3product\models\D3productProductType $productType
 * @property \d3yii2\d3product\models\D3productUnitFormula $unitFormula
 * @property string $aliasModel
 */
abstract class D3productTypeFormula extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3product_type_formula';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = [
        ];
        return $behaviors;
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['product_type_id'], 'required'],
            'smallint Unsigned' => [['id','product_type_id','unit_formula_id'],'integer' ,'min' => 0 ,'max' => 65535],
            [['product_type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3product\models\D3productProductType::className(), 'targetAttribute' => ['product_type_id' => 'id']],
            [['unit_formula_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3product\models\D3productUnitFormula::className(), 'targetAttribute' => ['unit_formula_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3product', 'ID'),
            'product_type_id' => Yii::t('d3product', 'Product Type ID'),
            'unit_formula_id' => Yii::t('d3product', 'Unit Formula ID'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductType()
    {
        return $this->hasOne(\d3yii2\d3product\models\D3productProductType::className(), ['id' => 'product_type_id'])->inverseOf('d3productTypeFormulas');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUnitFormula()
    {
        return $this->hasOne(\d3yii2\d3product\models\D3productUnitFormula::className(), ['id' => 'unit_formula_id'])->inverseOf('d3productTypeFormulas');
    }



}
