<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3product\models\base;

use Yii;


/**
 * This is the base-model class for table "d3product_unit".
 *
 * @property integer $id
 * @property integer $sys_company_id
 * @property string $code
 *
 * @property \d3yii2\d3product\models\D3productAttributes[] $d3productAttributes
 * @property \d3yii2\d3product\models\D3productProductType[] $d3productProductTypes
 * @property \d3yii2\d3product\models\D3productProduct[] $d3productProducts
 * @property \d3yii2\d3product\models\D3productTypeAttributes[] $d3productTypeAttributes
 * @property string $aliasModel
 */
abstract class D3productUnit extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3product_unit';
    }


    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        $behaviors = [
        ];
        return $behaviors;
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'smallint Unsigned' => [['id','sys_company_id'],'integer' ,'min' => 0 ,'max' => 65535],
            [['code'], 'string', 'max' => 20]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3product', 'ID'),
            'sys_company_id' => Yii::t('d3product', 'Sys Company ID'),
            'code' => Yii::t('d3product', 'Code'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints(): array
    {
        return array_merge(parent::attributeHints(), [
            'code' => Yii::t('d3product', 'Code'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3productAttributes()
    {
        return $this->hasMany(\d3yii2\d3product\models\D3productAttributes::className(), ['unit_id' => 'id'])->inverseOf('unit');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3productProductTypes()
    {
        return $this->hasMany(\d3yii2\d3product\models\D3productProductType::className(), ['unit_id' => 'id'])->inverseOf('unit');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3productProducts()
    {
        return $this->hasMany(\d3yii2\d3product\models\D3productProduct::className(), ['unit_id' => 'id'])->inverseOf('unit');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3productTypeAttributes()
    {
        return $this->hasMany(\d3yii2\d3product\models\D3productTypeAttributes::className(), ['unit_id' => 'id'])->inverseOf('unit');
    }
}
