<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3product\models\base;

use Yii;


/**
 * This is the base-model class for table "d3product_product".
 *
 * @property integer $id
 * @property integer $sys_company_id
 * @property string $name
 * @property string $description
 * @property integer $unit_id
 * @property integer $product_type_id
 *
 * @property \d3yii2\d3product\models\D3productAttributes[] $d3productAttributes
 * @property \d3yii2\d3product\models\D3productCodes[] $d3productCodes
 * @property \d3yii2\d3product\models\D3productProductGroup[] $d3productProductGroups
 * @property \d3yii2\d3product\models\D3productProductPrice[] $d3productProductPrices
 * @property \d3yii2\d3product\models\D3productProductType $productType
 * @property \d3yii2\d3product\models\D3productUnit $unit
 * @property string $aliasModel
 */
abstract class D3productProduct extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName(): string
    {
        return 'd3product_product';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'required' => [['sys_company_id'], 'required'],
            'smallint Unsigned' => [['id','sys_company_id','unit_id','product_type_id'],'integer' ,'min' => 0 ,'max' => 65535],
            [['description'], 'string'],
            [['name'], 'string', 'max' => 256],
            [['unit_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3product\models\D3productUnit::className(), 'targetAttribute' => ['unit_id' => 'id']],
            [['product_type_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3product\models\D3productProductType::className(), 'targetAttribute' => ['product_type_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3labels', 'ID'),
            'sys_company_id' => Yii::t('d3labels', 'Sys Company ID'),
            'name' => Yii::t('d3labels', 'Name'),
            'description' => Yii::t('d3labels', 'Description'),
            'unit_id' => Yii::t('d3labels', 'Unit'),
            'product_type_id' => Yii::t('d3labels', 'Type'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints(): array
    {
        return array_merge(parent::attributeHints(), [
            'name' => Yii::t('d3labels', 'Name'),
            'description' => Yii::t('d3labels', 'Description'),
            'unit_id' => Yii::t('d3labels', 'Unit'),
            'product_type_id' => Yii::t('d3labels', 'Type'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3productAttributes()
    {
        return $this->hasMany(\d3yii2\d3product\models\D3productAttributes::className(), ['product_id' => 'id'])->inverseOf('product');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3productCodes()
    {
        return $this->hasMany(\d3yii2\d3product\models\D3productCodes::className(), ['product_id' => 'id'])->inverseOf('product');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3productProductGroups()
    {
        return $this->hasMany(\d3yii2\d3product\models\D3productProductGroup::className(), ['product_id' => 'id'])->inverseOf('product');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getD3productProductPrices()
    {
        return $this->hasMany(\d3yii2\d3product\models\D3productProductPrice::className(), ['product_id' => 'id'])->inverseOf('product');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getProductType()
    {
        return $this->hasOne(\d3yii2\d3product\models\D3productProductType::className(), ['id' => 'product_type_id'])->inverseOf('d3productProducts');
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUnit()
    {
        return $this->hasOne(\d3yii2\d3product\models\D3productUnit::className(), ['id' => 'unit_id'])->inverseOf('d3productProducts');
    }


    
    /**
     * @inheritdoc
     * @return \d3yii2\d3product\models\D3productProductQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \d3yii2\d3product\models\D3productProductQuery(get_called_class());
    }
}
